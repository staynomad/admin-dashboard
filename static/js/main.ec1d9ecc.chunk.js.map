{"version":3,"sources":["utils/axiosConfig.js","assets/nomad.svg","pages/AdminPassword.js","components/Navbar.js","pages/Dashboard.js","components/Pagination.js","pages/Reservations.js","App.js","reportWebVitals.js","index.js"],"names":["app","axios","create","baseURL","AdminPassword","setToken","useState","password","setPassword","handleSubmit","e","a","preventDefault","post","loginReq","status","token","data","defaults","headers","common","alert","className","onSubmit","src","logo","alt","type","onChange","target","value","placeholder","Navbar","to","Dashboard","Pagination","itemsPerPage","totalItems","paginate","pageNumber","pageNumbers","i","Math","ceil","push","count","length","page","Reservations","reservations","setReservations","filterOpen","setFilterOpen","filterActive","setFilterActive","paginatedReservations","setPaginatedReservations","currentPage","setCurrentPage","reservationsPerPage","useEffect","get","res","reservationsArray","undefined","user","email","getReservations","indexOfLastRes","indexOfFirstRes","_","orderBy","reservation","Date","createdAt","filter","active","slice","ClickAwayListener","onClickAway","style","position","onClick","map","moment","calendar","_id","href","listing","totalPrice","hostFee","guestFee","toFixed","days","format","number","App","tokenString","localStorage","getItem","JSON","parse","getToken","userToken","setItem","stringify","useToken","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec1d9ecc.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst env = process.env.NODE_ENV; // current environment\r\n\r\nexport const app = axios.create({\r\n  baseURL:\r\n    env === \"production\"\r\n      ? \"https://api.vhomesgroup.com\" // production\r\n      : \"http://localhost:8080\", // development\r\n});\r\n","export default __webpack_public_path__ + \"static/media/nomad.71b300aa.svg\";","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { app } from \"../utils/axiosConfig\";\r\n\r\nimport logo from \"../assets/nomad.svg\";\r\n\r\nconst AdminPassword = ({ setToken }) => {\r\n  const [password, setPassword] = useState();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const loginReq = await app.post(\"/adminVerify\", {\r\n      password: password,\r\n    });\r\n    if (loginReq && loginReq.status === 200) {\r\n      // change this to a request for generate token\r\n      const token = loginReq.data.token;\r\n      setToken(token);\r\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n      return;\r\n    } else {\r\n      alert(\"Password is incorrect!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"password-page-screen\">\r\n      <form className=\"password-page-container\" onSubmit={handleSubmit}>\r\n        <img src={logo} alt=\"\" />\r\n        <h1>Password</h1>\r\n        <input\r\n          type=\"password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Admin Password\"\r\n        />\r\n        <div>\r\n          <button type=\"submit\">Login</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPassword;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport logo from \"../assets/nomad.svg\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"navbar-container\">\r\n      <img src={logo} alt=\"\" />\r\n      <div className=\"navbar-links\">\r\n        <Link to=\"/\">Dashboard</Link>\r\n        <Link to=\"/reservations\">Reservations</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div className=\"dashboard-screen\">\r\n      <Navbar />\r\n      <h3>Dashboard</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport PaginationUI from \"@material-ui/lab/Pagination\";\r\n\r\nconst Pagination = ({ itemsPerPage, totalItems, paginate, pageNumber }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  const handleChange = (e, value) => {\r\n    paginate(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagination-container\">\r\n      <PaginationUI\r\n        count={pageNumbers.length}\r\n        page={pageNumber}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { app } from \"../utils/axiosConfig\";\r\n\r\nimport _ from \"lodash\";\r\n\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Pagination from \"../components/Pagination\";\r\n\r\nconst Reservations = () => {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [filterActive, setFilterActive] = useState(null);\r\n\r\n  const [paginatedReservations, setPaginatedReservations] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [reservationsPerPage] = useState(20);\r\n\r\n  useEffect(() => {\r\n    const getReservations = async () => {\r\n      const res = await app.get(\"/reservation\");\r\n      const reservationsArray = res.data.reservations;\r\n      for (let i = 0; i < reservationsArray.length; i++) {\r\n        if (reservationsArray[i].user !== undefined) {\r\n          const res = await app.get(\r\n            `/user/getUserInfo/${reservationsArray[i].user}`\r\n          );\r\n          reservationsArray[i].email = res.data.email;\r\n        }\r\n      }\r\n      setReservations(reservationsArray);\r\n    };\r\n    getReservations();\r\n  }, []);\r\n\r\n  const paginate = (number) => {\r\n    setCurrentPage(number);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const indexOfLastRes = currentPage * reservationsPerPage;\r\n    const indexOfFirstRes = indexOfLastRes - reservationsPerPage;\r\n    setPaginatedReservations(\r\n      _.orderBy(\r\n        reservations,\r\n        [(reservation) => new Date(reservation.createdAt)],\r\n        [\"desc\"]\r\n      )\r\n        .filter(\r\n          (reservation) =>\r\n            reservation.active ===\r\n            (filterActive === null\r\n              ? reservation.active\r\n              : filterActive === true\r\n              ? true\r\n              : false)\r\n        )\r\n        .slice(indexOfFirstRes, indexOfLastRes)\r\n    );\r\n  }, [reservations, filterActive, currentPage]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [filterActive]);\r\n\r\n  return (\r\n    <div className=\"reservations-page-screen\">\r\n      <Navbar />\r\n      <div className=\"reservations-container\">\r\n        <div className=\"reservations-container-header\">\r\n          <h1>Reservations</h1>\r\n          <ClickAwayListener onClickAway={() => setFilterOpen(false)}>\r\n            <div style={{ position: \"relative\" }}>\r\n              <div\r\n                onClick={() => setFilterOpen(!filterOpen)}\r\n                className=\"reservations-dropdown-button\"\r\n              >\r\n                <p>{`Filter: ${\r\n                  filterActive === null\r\n                    ? \"All\"\r\n                    : filterActive === true\r\n                    ? \"Active\"\r\n                    : \"Expired\"\r\n                }`}</p>\r\n                {filterOpen ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\r\n              </div>\r\n              {filterOpen && (\r\n                <div className=\"reservations-dropdown-container\">\r\n                  <div\r\n                    className=\"reservation-dropdown-option\"\r\n                    onClick={() => {\r\n                      setFilterOpen(false);\r\n                      setFilterActive(null);\r\n                    }}\r\n                  >\r\n                    <p>All</p>\r\n                  </div>\r\n                  <div\r\n                    className=\"reservation-dropdown-option\"\r\n                    onClick={() => {\r\n                      setFilterOpen(false);\r\n                      setFilterActive(true);\r\n                    }}\r\n                  >\r\n                    <p>Active</p>\r\n                  </div>\r\n                  <div\r\n                    className=\"reservation-dropdown-option\"\r\n                    onClick={() => {\r\n                      setFilterOpen(false);\r\n                      setFilterActive(false);\r\n                    }}\r\n                  >\r\n                    <p>Expired</p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </ClickAwayListener>\r\n        </div>\r\n        <div className=\"reservations-table-container\">\r\n          <table>\r\n            <tr className=\"reservations-table-header\">\r\n              <th>Date</th>\r\n              <th>Reservation ID</th>\r\n              <th>Listing</th>\r\n              <th>Total</th>\r\n              <th>After Stripe</th>\r\n              <th>Host Payout</th>\r\n              <th>Profit</th>\r\n              <th>Reservation Dates</th>\r\n              <th>User</th>\r\n              <th>Active</th>\r\n            </tr>\r\n            {reservations.length > 0 &&\r\n              _.orderBy(\r\n                paginatedReservations,\r\n                [(reservation) => new Date(reservation.createdAt)],\r\n                [\"desc\"]\r\n              ).map((reservation) => (\r\n                <tr key={reservation._id}>\r\n                  <td>{moment(reservation.createdAt).calendar()}</td>\r\n                  <td>{reservation._id}</td>\r\n                  <td>\r\n                    <a\r\n                      href={`https://www.visitnomad.com/listing/${reservation.listing}`}\r\n                      target=\"_blank\"\r\n                    >\r\n                      visitnomad.com\r\n                    </a>\r\n                  </td>\r\n                  <td>${reservation.totalPrice}</td>\r\n                  <td>\r\n                    ${reservation.totalPrice - reservation.totalPrice * 0.03}\r\n                  </td>\r\n                  <td>\r\n                    $\r\n                    {(\r\n                      reservation.totalPrice -\r\n                      reservation.totalPrice * 0.03 -\r\n                      reservation.hostFee -\r\n                      reservation.guestFee\r\n                    ).toFixed(2)}\r\n                  </td>\r\n                  <td>\r\n                    $\r\n                    {(\r\n                      reservation.totalPrice -\r\n                      reservation.totalPrice * 0.03 -\r\n                      (reservation.totalPrice -\r\n                        reservation.totalPrice * 0.03 -\r\n                        reservation.hostFee -\r\n                        reservation.guestFee)\r\n                    ).toFixed(2)}\r\n                  </td>\r\n                  <td>{`${moment(reservation.days[0]).format(\r\n                    \"MM[/]DD[/]YYYY\"\r\n                  )} to ${moment(reservation.days[1]).format(\r\n                    \"MM[/]DD[/]YYYY\"\r\n                  )}`}</td>\r\n                  <td>{reservation.email}</td>\r\n                  <td>{reservation.active ? \"Yes\" : \"No\"}</td>\r\n                </tr>\r\n              ))}\r\n          </table>\r\n        </div>\r\n        <div className=\"reservations-pagination-container\">\r\n          <Pagination\r\n            itemsPerPage={reservationsPerPage}\r\n            totalItems={\r\n              reservations.filter(\r\n                (reservation) =>\r\n                  reservation.active ===\r\n                  (filterActive === null\r\n                    ? reservation.active\r\n                    : filterActive === true\r\n                    ? true\r\n                    : false)\r\n              ).length\r\n            }\r\n            paginate={paginate}\r\n            pageNumber={currentPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reservations;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport AdminPassword from \"./pages/AdminPassword\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport Reservations from \"./pages/Reservations\";\r\n\r\nimport \"./styles/styles.css\";\r\n\r\nconst useToken = () => {\r\n  const getToken = () => {\r\n    const tokenString = localStorage.getItem(\"token\");\r\n    const userToken = JSON.parse(tokenString);\r\n    return userToken;\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = (userToken) => {\r\n    localStorage.setItem(\"token\", JSON.stringify(userToken));\r\n    setToken(userToken);\r\n  };\r\n\r\n  return {\r\n    setToken: saveToken,\r\n    token,\r\n  };\r\n};\r\n\r\nfunction App() {\r\n  const { token, setToken } = useToken();\r\n\r\n  if (!token) {\r\n    return <AdminPassword setToken={setToken} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Dashboard} />\r\n          <Route path=\"/reservations\" exact component={Reservations} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}